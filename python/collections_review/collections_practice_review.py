# collections_practice_review.py
# Python：コレクション操作と内包表記の復習スクリプト

# ==========================
# タプル + 内包表記（組み合わせ生成）
# ==========================
combs = [(a, b) for a in [3, 2, 1] for b in [6, 5] if a != b]
print("タプルの組み合わせ:", combs)


# ==========================
# ディクショナリ（辞書）の基本操作
# ==========================
sale = {"東京": 80, "名古屋": 60, "京都": 22, "大阪": 50, "福岡": 75}
print("現在のデータ:", sale)

# キー入力による検索（存在チェックあり）
k = input("検索する支店名：")
if k in sale:
    print(f"{k}のデータは{sale[k]}です。")
else:
    print(f"{k}のデータは見つかりません。")


# ==========================
# ディクショナリの追加・変更・削除
# ==========================
# 追加
k = input("追加する支店名：")
if k in sale:
    print(f"{k}のデータは既に存在しています。")
else:
    d = int(input("追加するデータ："))
    sale[k] = d
    print(f"{k}を{d}で追加しました。")

# 変更
k = input("変更する支店名：")
if k in sale:
    d = int(input("新しいデータ："))
    sale[k] = d
    print(f"{k}のデータを{d}に変更しました。")
else:
    print(f"{k}のデータは見つかりません。")

# 削除
k = input("削除する支店名：")
if k in sale:
    del sale[k]
    print(f"{k}のデータを削除しました。")
else:
    print(f"{k}のデータは見つかりません。")

print("更新後のデータ:", sale)


# ==========================
# 辞書の情報一覧
# ==========================
print("支店名一覧:", list(sale.keys()))
print("売上データ一覧:", list(sale.values()))
print("支店別データ一覧:", list(sale.items()))


# ==========================
# ディクショナリの結合（update）
# ==========================
sale1 = {"東京": 80, "名古屋": 60, "京都": 22}
sale2 = {"京都": 100, "大阪": 50, "福岡": 75}
sale1.update(sale2)
print("マージ後のデータ:", sale1)


# ==========================
# セットの操作（集合）
# ==========================
city = {"東京", "名古屋", "京都", "大阪", "福岡"}

# 追加
d = input("追加する都市名：")
if d in city:
    print(f"{d}は既に存在しています。")
else:
    city.add(d)
    print(f"{d}を追加しました。")

# 削除
d = input("削除する都市名：")
if d in city:
    city.remove(d)
    print(f"{d}を削除しました。")
else:
    print(f"{d}は見つかりません。")

print("更新後の都市リスト:", city)


# ==========================
# セットの集合演算
# ==========================
cityA = {"東京", "名古屋", "京都", "大阪"}
cityB = {"京都", "大阪", "福岡"}

print("共通：", cityA & cityB)
print("Aのみ：", cityA - cityB)
print("Bのみ：", cityB - cityA)
print("全体：", cityA | cityB)


# ==========================
# 練習問題：リスト操作
# ==========================
a = [1, 3, 4, 6, 3, 5]
print("元のリスト:", a)

a.insert(3, -1)
print("3番目に-1を挿入:", a)

a.pop(4)
print("4番目の要素を削除:", a)

a.remove(3)
print("最初の3を削除:", a)


# ==========================
# 内包表記 vs map + lambda
# ==========================
cubes = list(map(lambda a: a ** 3, range(5)))
print("立方数リスト:", cubes)

data = [1, 2, 3, 4, 5]
print("2倍リスト（内包）:", [x*2 for x in data])


# ==========================
# 応用：商品マスターと店舗分析
# ==========================
shopmaster = {
    "白菜": 180, "トマト": 215, "ナス": 198, "キュウリ": 115,
    "マグロ": 820, "イカ": 225, "キャベツ": 108, "タイ": 884
}

shop1 = {"白菜", "トマト", "ナス", "キュウリ", "マグロ", "イカ"}
shop2 = {"ナス", "キュウリ", "キャベツ", "マグロ", "タイ"}

common_items = shop1 & shop2
print("共通の売れ筋商品:", common_items)

for item in common_items:
    print(f"{item}の価格：{shopmaster[item]}円")